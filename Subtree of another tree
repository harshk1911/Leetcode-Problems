Problem : Subtree of another tree
Difficulty : Easy
URL : https://leetcode.com/problems/subtree-of-another-tree/description/
Approach : Iterate through all nodes in parent tree. Check if any subtree starting from node in parent tree matches with second tree.
class Solution {
    public boolean isSubtree(TreeNode root, TreeNode subRoot) {
        if(subRoot == null)
            return true;
        if(root == null)
            return false;
        if(isSameTree(root,subRoot))
            return true;
        return (isSubtree(root.left,subRoot) || isSubtree(root.right,subRoot));
            
    }
    public boolean isSameTree(TreeNode node1, TreeNode node2)
    {
        if(node1 == null && node2 == null)
            return true;
        if(node1 == null || node2 == null)
            return false;
        if(node1.val == node2.val)
            return isSameTree(node1.left,node2.left) && isSameTree(node1.right,node2.right);
        return false;
    }
}
