Problem : Merge k Sorted Lists
Difficulty : Hard
Approach : Take 2 lists at a time and merge them. Do this till there is only one list. [1,2,3,4,5] -> 1,2 -> a 3,4 -> b -> a,b -> I -> I,5 -> result
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists.length == 0 || lists == null)
            return null;
        List<ListNode> arr = Arrays.asList(lists);
        while(arr.size() > 1)
        {
            ArrayList<ListNode> temp = new ArrayList<>();
            for(int i = 0;i < arr.size();i += 2)
            {
                ListNode l1 = arr.get(i);
                ListNode l2 = null;
                if(i + 1 < arr.size())
                    l2 = arr.get(i+1);
                temp.add(mergeLists(l1,l2));
            }
            arr = temp;
        }
        return arr.get(0);
    }
    public ListNode mergeLists(ListNode list1,ListNode list2)
    {
        ListNode dummy = new ListNode();
        ListNode prev = dummy;
        while(list1 != null && list2 != null)
        {
            if(list1.val < list2.val)
            {
                prev.next = list1;
                list1 = list1.next;
            }
            else
            {
                prev.next = list2;
                list2 = list2.next;
            }
            prev = prev.next;
        }
        if(list1 != null)
            prev.next = list1;
        if(list2 != null)
            prev.next = list2;
        return dummy.next;
    }
}
