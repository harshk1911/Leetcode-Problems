//Problem Name : House Robber II
//Difficulty : Medium
//Link : https://leetcode.com/problems/house-robber-ii/description/
//My Approach : Use House Robber I solution for two cases
//Code : 
class Solution {
    public int rob(int[] nums) {
        if(nums.length == 1)
            return nums[0];
        if(nums.length == 2)
            return Math.max(nums[0],nums[1]);
        return Math.max(HouseRob1(nums,0,nums.length - 1),HouseRob1(nums,1,nums.length));
    }
    public int HouseRob1(int[] nums,int start,int end) {
        if(nums.length == 1)
            return nums[0];
        int[] dp = new int[nums.length];
        dp[start] = nums[start];
        dp[start+1] = Math.max(nums[start],nums[start+1]);
        for(int i = start + 2;i < end;i ++)
        {
            dp[i] = Math.max(dp[i-2] + nums[i],dp[i-1]);
        }
        return dp[end - 1];
    }
}
