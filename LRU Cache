Problem : LRU cache
Difficulty : medium
Approach : Use LinkedHashmap and set accessOrder as true. This will ensure entries in linkedhashmap are present in order of their access.

class LRUCache {
    private Map<Integer,Integer> map;
    private int cap;
    public LRUCache(int capacity) {
        map = new LinkedHashMap<Integer,Integer>(capacity,0.75f,true);
        cap = capacity;
    }
    
    public int get(int key) {
        if(map.containsKey(key))
            return map.get(key);
        return -1;
    }
    
    public void put(int key, int value) {
        map.put(key,value);
        if(map.size() > cap)
            map.remove(map.keySet().iterator().next());
    }
}

/**
 * Your LRUCache object will be instantiated and called as such:
 * LRUCache obj = new LRUCache(capacity);
 * int param_1 = obj.get(key);
 * obj.put(key,value);
 */
